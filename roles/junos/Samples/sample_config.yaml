- name: 'Explicit host argument'
  hosts: junos
  connection: local
  gather_facts: no
  collections:
    - juniper.device

# the user-credentials and other task specific parameter can be specified with vars
# which will be applicable to all the tasks.
# Uncomment the below lines to use them.

#  vars:
#    host: 10.x.x.x
#    user: user
#    passwd: user123
#    timeout: 300

  tasks:
    - name: Retrieve the committed configuration
      config:
        retrieve: 'committed'
        diff: false
        check: false
        commit: false
      register: response

    - name: Print the lines in the config.
      debug:
        var: response.config_lines

    - name: Append .foo to the hostname using private config mode.
      config:
        config_mode: 'private'
        load: 'merge'
        lines:
          - "set system host-name {{ inventory_hostname }}.foo"
      register: response

    - name: Print the config changes.
      debug:
        var: response.diff_lines

    - name: Rollback to the previous config.
      config:
        config_mode: 'private'
        rollback: 1
      register: response

    - name: Print the config changes.
      debug:
        var: response.diff_lines

    - name: Rollback to the rescue config.
      config:
        rollback: 'rescue'
      register: response
    - name: Print the complete response.
      debug:
        var: response

    - name: Load override from a file.
      config:
        load: 'override'
        src: "{{ inventory_hostname }}.conf"
      register: response

    - name: Print the complete response.
      debug:
        var: response

    - name: Load from a Jinja2 template.
      config:
        load: 'merge'
        format: 'xml'
        template: "{{ inventory_hostname }}.j2"
        vars:
          host: "{{ inventory_hostname }}"
      register: response
    - name: Print the complete response.
      debug:
        var: response

    - name: Load from a file on the Junos device.
      config:
        load: 'merge'
        url: "{{ inventory_hostname }}.conf"
      register: response
    - name: Print the complete response.
      debug:
        var: response

    - name: Load from a file on the Junos device, skip the commit check
      config:
        load: 'merge'
        url: "{{ inventory_hostname }}.conf"
        check: false
      register: response
    - name: Print the msg.
      debug:
        var: response.msg

    - name: Print diff between current and rollback 10. No check. No commit.
      config:
        rollback: 11
        diff: true
        check: false
        commit: false
      register: response

    - name: Print the msg.
      debug:
        var: response

    - name: Retrieve [edit system services] of current committed config.
      config:
        retrieve: 'committed'
        filter: 'system/services'
        diff: true
        check: false
        commit: false
      register: response

    - name: Print the resulting config lines.
      debug:
        var: response.config_lines

    - name: Enable NETCONF SSH and traceoptions, save config, and diffs.
      config:
        load: 'merge'
        lines:
          - 'set system services netconf ssh'
          - 'set system services netconf traceoptions flag all'
          - 'set system services netconf traceoptions file netconf.log'
        format: 'set'
        retrieve: 'candidate'
        filter: 'system/services'
        comment: 'Enable NETCONF with traceoptions'
        dest_dir: './output'
      register: response

    - name: Print the complete response
      debug:
        var: response

    - name: Load conf. Confirm within 5 min. Wait 3 secs between chk and commit
      config:
        load: 'merge'
        url: "{{ inventory_hostname }}.conf"
        confirm: 5
        check_commit_wait: 3
      register: response

    - name: Print the complete response
      debug:
        var: response

    - name: Confirm the previous commit with a commit check (but no commit)
      config:
        check: true
        diff: false
        commit: false
      register: response

    - name: Print the complete response
      debug:
        var: response

    - name: fetch config from the device with filter and login credentials
        config:
          host: "10.x.x.x"
          user: "user"
          passwd: "user123"
          port: "22"
          retrieve: 'committed'
          format: xml
          commit: no
          check: no
          diff: no
          dest_dir: "/tmp/"
          filter: <configuration><groups><name>re0</name></groups></configuration>
          return_output: True
        register: config_output

    - name: "Print the response"
      debug:
        var: response
